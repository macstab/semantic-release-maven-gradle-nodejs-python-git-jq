name: Docker Image CI

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEST_DOCKER_IMAGE: macstab/semantic-release-maven-gradle-nodejs-python-git-jq
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build docker image for test only
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ env.DEST_DOCKER_IMAGE }}:v1.6.2
          load: true
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        id: semantic_release
        uses: docker://macstab/semantic-release-maven-gradle-nodejs-python-git-jq:v1.6.2
        with:
          entrypoint: /bin/sh
          workdir: /home/runner/work/${{ github.repository }}/${{ github.repository }}
          branches: 'main'
          args: -c "cp /configs/$CONFIG_FILE .releaserc && git config --global --add safe.directory /github/workspace && npx semantic-release --branches $RELEASE_BRANCH"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_ENV: production
          GH_URL: https://github.com/${{ github.repository }}.git
          RELEASE_BRANCH: main
          CONFIG_FILE: .releaserc-docker.json
          DEBUG: semantic-release:*
      - name: Get latest release
        if: github.ref == 'refs/heads/main'
        id: latest_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: merge main -> develop
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker://macstab/semantic-release-maven-gradle-nodejs-python-git-jq:v1.6.2
        with:
          entrypoint: /bin/sh
          workdir: /home/runner/work/${{ github.repository }}/${{ github.repository }}
          args: "-c \"set -x && git config --global --add safe.directory /github/workspace && git config --global user.email '${{ secrets.BOT_USER_EMAIL }}' && git config --global user.name '${{ secrets.BOT_USER_NAME }}' && git fetch -a origin && git checkout ${INPUT_TARGET_BRANCH} && git pull && git merge --no-ff -m 'chore(release): ${{ fromJson(steps.latest_release.outputs.data).tag_name }} merge main to develop' ${INPUT_FROM_BRANCH} && git push\""
        env:
          INPUT_FROM_BRANCH: 'main'
          INPUT_TARGET_BRANCH: 'develop'
      # Do not build on tags. Only build on main
      - name: Build and push docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DEST_DOCKER_IMAGE }}:${{ fromJson(steps.latest_release.outputs.data).tag_name }}
      # On develop use this one
      - name: Push to develop-hash tag
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DEST_DOCKER_IMAGE }}:develop-${{ github.sha }}